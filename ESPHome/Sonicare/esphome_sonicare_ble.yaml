esphome:
  name: bleclient1
  friendly_name: BLEClient1

esp32:
  board: nodemcu-32s
  framework:
    type: arduino

# Enable logging
logger:
  level: INFO

# Enable Home Assistant API
api:
  encryption:
    key: 

ota:
  - platform: esphome
    password: 

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.xx.xx
    gateway: 192.168.xx.xx
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Bleclient1 Fallback Hotspot"
    password: 

captive_portal:

esp32_ble_tracker:

#BigE's toothbrush
ble_client:
  - mac_address: XX:XX:XX:XX:XX:XX
    id: sonicare_BigE
    name: BigE Toothbrush
    auto_connect: true
    on_connect:
      then:
        - lambda: |-
            id(sonicare_BigE_connected) = true;
            ESP_LOGD("ble_client_lambda", "Connected to BigE's toothbrush");
    on_disconnect:
      then:
        - lambda: |-
            id(sonicare_BigE_connected) = false;
            ESP_LOGD("ble_client_lambda", "Disconnected from BigE's toothbrush");


#LittleE's toothbrush
  - mac_address: XX:XX:XX:XX:XX:XX
    id: sonicare_LittleE
    name: LittleE Toothbrush
    auto_connect: true
    on_connect:
      then:
        - lambda: |-
            id(sonicare_LittleE_connected) = true;
            ESP_LOGD("ble_client_lambda", "Connected to LittleE's toothbrush");
    on_disconnect:
      then:
        - lambda: |-
            id(sonicare_LittleE_connected) = false;
            ESP_LOGD("ble_client_lambda", "Disconnected from LittleE's toothbrush"); 

globals:
#BigE's toothbrush
  - id: sonicare_BigE_connected
    type: bool
    restore_value: no 
    initial_value: 'false'

  - id: BigE_battery_last_value
    type: int
    restore_value: yes

  - id: BigE_active_seconds
    type: int
    restore_value: yes
    initial_value: '0.0'
  
  - id: BigE_toothbrush_status
    type: int
    restore_value: True

#LittleE's toothbrush
  - id: sonicare_LittleE_connected
    type: bool
    restore_value: no 
    initial_value: 'false'

  - id: LittleE_battery_last_value
    type: int
    restore_value: yes

  - id: LittleE_active_seconds
    type: int
    restore_value: yes
    initial_value: '0.0'
  
  - id: LittleE_toothbrush_status
    type: int
    restore_value: True

binary_sensor:
#BigE's toothbrush
  - platform: template 
    name: BigE Toothbrush
    id: sonicare_BigE_ble_connection
    lambda: |- 
      return id(sonicare_BigE_connected); 
    device_class: connectivity

#LittleE's toothbrush
  - platform: template 
    name: LittleE Toothbrush
    id: sonicare_LittleE_ble_connection
    lambda: |- 
      return id(sonicare_LittleE_connected); 
    device_class: connectivity

sensor:
# LittleE
  - platform: ble_client
    ble_client_id: sonicare_LittleE
    id: LittleE_toothbrush_battery_value
    type: characteristic
    service_uuid: 180F
    characteristic_uuid: 2A19
    notify: True
    unit_of_measurement: '%'
    device_class: battery
    internal: True
    on_value:
      then:
        - lambda: |-
            if (id(sonicare_LittleE_connected)) {
              if (x >= 0 && x <= 100) {
                id(LittleE_battery_last_value) = x;
                ESP_LOGD("ble_sensor", "Battery value updated: %d", id(LittleE_battery_last_value));
              } else {
                ESP_LOGD("ble_sensor", "Received invalid battery value: %d", x);
              }
            } else {
              ESP_LOGD("ble_sensor", "Battery value not updated because the device is not connected");
            }

# LittleE
  - platform: template
    id: LittleE_toothbrush_battery
    name: LittleE Toothbrush Battery
    lambda: |-
      return id(LittleE_battery_last_value); 
    device_class: battery
    unit_of_measurement: '%'
    accuracy_decimals: 0

# LittleE
  - platform: ble_client
    ble_client_id: sonicare_LittleE
    id: LittleE_toothbrush_active_seconds
    name: LittleE Toothbrush Active
    type: characteristic
    service_uuid: 477ea600-a260-11e4-ae37-0002a5d50002
    characteristic_uuid: 477ea600-a260-11e4-ae37-0002a5d54090
    notify: True
    device_class: duration
    accuracy_decimals: 0
    unit_of_measurement: s
    internal: True
    on_value:
      then:
        - lambda: |-
            if (id(sonicare_LittleE_connected)) {
              if (x >= 0 && x <= 121) {
                id(LittleE_active_seconds) = x;
                ESP_LOGD("ble_sensor", "Active time in seconds updated: %d", id(LittleE_active_seconds));
              } else {
                ESP_LOGD("ble_sensor", "Received invalid active time in seconds value: %d", x);
              }
            } else {
              ESP_LOGD("ble_sensor", "Active time in seconds not updated because the device is not connected");
            }

# LittleE
  - platform: template
    id: LittleE_toothbrush_active
    name: LittleE Active Time
    lambda: |-
      return id(LittleE_active_seconds); 
    device_class: duration
    unit_of_measurement: s
    accuracy_decimals: 0
    update_interval: 1s

# LittleE
  - platform: ble_client
    ble_client_id: sonicare_LittleE
    id: LittleE_toothbrush_stat
    name: LittleE Toothbrush Status
    type: characteristic
    service_uuid: 477ea600-a260-11e4-ae37-0002a5d50001
    characteristic_uuid: 477ea600-a260-11e4-ae37-0002a5d54010
    notify: True
    update_interval: 5s
    internal: True
    on_value:
      then:
        - lambda: |-
            if (id(sonicare_LittleE_connected)) {
              if (x >= 0 && x <= 7) {
                id(LittleE_toothbrush_status) = x;
                ESP_LOGD("ble_sensor", "Handle Status Updated: %d", id(LittleE_toothbrush_status));
              } else {
                ESP_LOGD("ble_sensor", "Received invalid Status value: %d", x);
              }
            } else {
              ESP_LOGD("ble_sensor", "Handle Status not updated because the device is not connected");
            }

# LittleE
  - platform: template
    id: LittleE_handle_status
    name: LittleE Handle Status
    lambda: |-
      return id(LittleE_toothbrush_status);
    update_interval: 5s
    accuracy_decimals: 0

# BigE
  - platform: ble_client
    ble_client_id: sonicare_BigE
    id: BigE_toothbrush_battery_value
    type: characteristic
    service_uuid: 180F
    characteristic_uuid: 2A19
    notify: True
    unit_of_measurement: '%'
    device_class: battery
    internal: True
    on_value:
      then:
        - lambda: |-
            if (id(sonicare_BigE_connected)) {
              if (x >= 0 && x <= 100) {
                id(BigE_battery_last_value) = x;
                ESP_LOGD("ble_sensor", "Battery value updated: %d", id(BigE_battery_last_value));
              } else {
                ESP_LOGD("ble_sensor", "Received invalid battery value: %d", x);
              }
            } else {
              ESP_LOGD("ble_sensor", "Battery value not updated because the device is not connected");
            }

# BigE
  - platform: template
    id: BigE_toothbrush_battery
    name: BigE Toothbrush Battery
    lambda: |-
      return id(BigE_battery_last_value); 
    device_class: battery
    unit_of_measurement: '%'
    accuracy_decimals: 0

# BigE
  - platform: ble_client
    ble_client_id: sonicare_BigE
    id: BigE_toothbrush_active_seconds
    name: BigE Toothbrush Active
    type: characteristic
    service_uuid: 477ea600-a260-11e4-ae37-0002a5d50002
    characteristic_uuid: 477ea600-a260-11e4-ae37-0002a5d54090
    notify: True
    device_class: duration
    accuracy_decimals: 0
    unit_of_measurement: s
    internal: True
    on_value:
      then:
        - lambda: |-
            if (id(sonicare_BigE_connected)) {
              if (x >= 0 && x <= 121) {
                id(BigE_active_seconds) = x;
                ESP_LOGD("ble_sensor", "Active time in seconds updated: %d", id(BigE_active_seconds));
              } else {
                ESP_LOGD("ble_sensor", "Received invalid active time in seconds value: %d", x);
              }
            } else {
              ESP_LOGD("ble_sensor", "Active time in seconds not updated because the device is not connected");
            }

# BigE
  - platform: template
    id: BigE_toothbrush_active
    name: BigE Active Time
    lambda: |-
      return id(BigE_active_seconds); 
    device_class: duration
    unit_of_measurement: s
    accuracy_decimals: 0
    update_interval: 1s

# BigE
  - platform: ble_client
    ble_client_id: sonicare_BigE
    id: BigE_toothbrush_stat
    name: BigE Toothbrush Status
    type: characteristic
    service_uuid: 477ea600-a260-11e4-ae37-0002a5d50001
    characteristic_uuid: 477ea600-a260-11e4-ae37-0002a5d54010
    notify: True
    update_interval: 5s
    internal: True
    on_value:
      then:
        - lambda: |-
            if (id(sonicare_BigE_connected)) {
              if (x >= 0 && x <= 7) {
                id(BigE_toothbrush_status) = x;
                ESP_LOGD("ble_sensor", "Handle Status Updated: %d", id(BigE_toothbrush_status));
              } else {
                ESP_LOGD("ble_sensor", "Received invalid Status value: %d", x);
              }
            } else {
              ESP_LOGD("ble_sensor", "Handle Status not updated because the device is not connected");
            }

# BigE
  - platform: template
    id: BigE_handle_status
    name: BigE Handle Status
    lambda: |-
      return id(BigE_toothbrush_status);
    update_interval: 5s
    accuracy_decimals: 0

switch:
  - platform: shutdown
    name: "BLEClient1 Shutdown"

  - platform: restart
    name: "BLEClient1 Restart"

